//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DTO
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class QL_KhachSanEntities : DbContext
    {
        public QL_KhachSanEntities()
            : base("name=QL_KhachSanEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<ChiTietDichVuPhieuDatPhong> ChiTietDichVuPhieuDatPhongs { get; set; }
        public DbSet<ChiTietPhieuDatPhong> ChiTietPhieuDatPhongs { get; set; }
        public DbSet<DichVu> DichVus { get; set; }
        public DbSet<HoaDon> HoaDons { get; set; }
        public DbSet<KhachHang> KhachHangs { get; set; }
        public DbSet<LoaiDichVu> LoaiDichVus { get; set; }
        public DbSet<LoaiPhong> LoaiPhongs { get; set; }
        public DbSet<NhanVien> NhanViens { get; set; }
        public DbSet<PhieuDatPhong> PhieuDatPhongs { get; set; }
        public DbSet<Phong> Phongs { get; set; }
        public DbSet<TienNghiPhong> TienNghiPhongs { get; set; }
        public DbSet<ListDichVu> ListDichVus { get; set; }
        public DbSet<ListLoaiPhong> ListLoaiPhongs { get; set; }
        public DbSet<ThongTinHoaDon> ThongTinHoaDons { get; set; }
        public DbSet<DichVuTheoPDP> DichVuTheoPDPs { get; set; }
        public DbSet<DanhSachThongTinPhong> DanhSachThongTinPhongs { get; set; }
    
        public virtual int InsertChiTietDVPhieuDatPhong(string maPDP, string maPhong, string maDV, Nullable<int> soLuongDichVu)
        {
            var maPDPParameter = maPDP != null ?
                new ObjectParameter("MaPDP", maPDP) :
                new ObjectParameter("MaPDP", typeof(string));
    
            var maPhongParameter = maPhong != null ?
                new ObjectParameter("MaPhong", maPhong) :
                new ObjectParameter("MaPhong", typeof(string));
    
            var maDVParameter = maDV != null ?
                new ObjectParameter("MaDV", maDV) :
                new ObjectParameter("MaDV", typeof(string));
    
            var soLuongDichVuParameter = soLuongDichVu.HasValue ?
                new ObjectParameter("SoLuongDichVu", soLuongDichVu) :
                new ObjectParameter("SoLuongDichVu", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertChiTietDVPhieuDatPhong", maPDPParameter, maPhongParameter, maDVParameter, soLuongDichVuParameter);
        }
    
        public virtual int InsertChiTietPhieuDatPhong(string maPDP, string maPhong, Nullable<System.DateTime> ngayDat, Nullable<System.DateTime> ngayKetThuc, Nullable<System.TimeSpan> gioDat, Nullable<System.TimeSpan> gioKetThuc)
        {
            var maPDPParameter = maPDP != null ?
                new ObjectParameter("MaPDP", maPDP) :
                new ObjectParameter("MaPDP", typeof(string));
    
            var maPhongParameter = maPhong != null ?
                new ObjectParameter("MaPhong", maPhong) :
                new ObjectParameter("MaPhong", typeof(string));
    
            var ngayDatParameter = ngayDat.HasValue ?
                new ObjectParameter("NgayDat", ngayDat) :
                new ObjectParameter("NgayDat", typeof(System.DateTime));
    
            var ngayKetThucParameter = ngayKetThuc.HasValue ?
                new ObjectParameter("NgayKetThuc", ngayKetThuc) :
                new ObjectParameter("NgayKetThuc", typeof(System.DateTime));
    
            var gioDatParameter = gioDat.HasValue ?
                new ObjectParameter("GioDat", gioDat) :
                new ObjectParameter("GioDat", typeof(System.TimeSpan));
    
            var gioKetThucParameter = gioKetThuc.HasValue ?
                new ObjectParameter("GioKetThuc", gioKetThuc) :
                new ObjectParameter("GioKetThuc", typeof(System.TimeSpan));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertChiTietPhieuDatPhong", maPDPParameter, maPhongParameter, ngayDatParameter, ngayKetThucParameter, gioDatParameter, gioKetThucParameter);
        }
    
        public virtual int InsertDichVu(string maLoaiDV, string tenDV, Nullable<double> giaTien, string donVi)
        {
            var maLoaiDVParameter = maLoaiDV != null ?
                new ObjectParameter("MaLoaiDV", maLoaiDV) :
                new ObjectParameter("MaLoaiDV", typeof(string));
    
            var tenDVParameter = tenDV != null ?
                new ObjectParameter("TenDV", tenDV) :
                new ObjectParameter("TenDV", typeof(string));
    
            var giaTienParameter = giaTien.HasValue ?
                new ObjectParameter("GiaTien", giaTien) :
                new ObjectParameter("GiaTien", typeof(double));
    
            var donViParameter = donVi != null ?
                new ObjectParameter("DonVi", donVi) :
                new ObjectParameter("DonVi", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertDichVu", maLoaiDVParameter, tenDVParameter, giaTienParameter, donViParameter);
        }
    
        public virtual int InsertHoaDon(string maPDP, Nullable<double> tongGiaTri)
        {
            var maPDPParameter = maPDP != null ?
                new ObjectParameter("MaPDP", maPDP) :
                new ObjectParameter("MaPDP", typeof(string));
    
            var tongGiaTriParameter = tongGiaTri.HasValue ?
                new ObjectParameter("TongGiaTri", tongGiaTri) :
                new ObjectParameter("TongGiaTri", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertHoaDon", maPDPParameter, tongGiaTriParameter);
        }
    
        public virtual int InsertKhachHang(string tenKH, string sDT, string ngaySinh, string diaChi, string phai, string maCMT, string quocTich)
        {
            var tenKHParameter = tenKH != null ?
                new ObjectParameter("TenKH", tenKH) :
                new ObjectParameter("TenKH", typeof(string));
    
            var sDTParameter = sDT != null ?
                new ObjectParameter("SDT", sDT) :
                new ObjectParameter("SDT", typeof(string));
    
            var ngaySinhParameter = ngaySinh != null ?
                new ObjectParameter("NgaySinh", ngaySinh) :
                new ObjectParameter("NgaySinh", typeof(string));
    
            var diaChiParameter = diaChi != null ?
                new ObjectParameter("DiaChi", diaChi) :
                new ObjectParameter("DiaChi", typeof(string));
    
            var phaiParameter = phai != null ?
                new ObjectParameter("Phai", phai) :
                new ObjectParameter("Phai", typeof(string));
    
            var maCMTParameter = maCMT != null ?
                new ObjectParameter("MaCMT", maCMT) :
                new ObjectParameter("MaCMT", typeof(string));
    
            var quocTichParameter = quocTich != null ?
                new ObjectParameter("QuocTich", quocTich) :
                new ObjectParameter("QuocTich", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertKhachHang", tenKHParameter, sDTParameter, ngaySinhParameter, diaChiParameter, phaiParameter, maCMTParameter, quocTichParameter);
        }
    
        public virtual int InsertLoaiDichVu(string tenLoaiDichVu)
        {
            var tenLoaiDichVuParameter = tenLoaiDichVu != null ?
                new ObjectParameter("TenLoaiDichVu", tenLoaiDichVu) :
                new ObjectParameter("TenLoaiDichVu", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertLoaiDichVu", tenLoaiDichVuParameter);
        }
    
        public virtual int InsertLoaiPhong(string tenLoaiPhong, Nullable<double> giaTheoGio, Nullable<double> giaTheoNgay)
        {
            var tenLoaiPhongParameter = tenLoaiPhong != null ?
                new ObjectParameter("TenLoaiPhong", tenLoaiPhong) :
                new ObjectParameter("TenLoaiPhong", typeof(string));
    
            var giaTheoGioParameter = giaTheoGio.HasValue ?
                new ObjectParameter("GiaTheoGio", giaTheoGio) :
                new ObjectParameter("GiaTheoGio", typeof(double));
    
            var giaTheoNgayParameter = giaTheoNgay.HasValue ?
                new ObjectParameter("GiaTheoNgay", giaTheoNgay) :
                new ObjectParameter("GiaTheoNgay", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertLoaiPhong", tenLoaiPhongParameter, giaTheoGioParameter, giaTheoNgayParameter);
        }
    
        public virtual int InsertNhanVien(string tenNV, string sDT, string ngaySinh, string diaChi, string hinhAnh, string vaiTro, string email, string phai, string matKhau, string cCCD)
        {
            var tenNVParameter = tenNV != null ?
                new ObjectParameter("TenNV", tenNV) :
                new ObjectParameter("TenNV", typeof(string));
    
            var sDTParameter = sDT != null ?
                new ObjectParameter("SDT", sDT) :
                new ObjectParameter("SDT", typeof(string));
    
            var ngaySinhParameter = ngaySinh != null ?
                new ObjectParameter("NgaySinh", ngaySinh) :
                new ObjectParameter("NgaySinh", typeof(string));
    
            var diaChiParameter = diaChi != null ?
                new ObjectParameter("DiaChi", diaChi) :
                new ObjectParameter("DiaChi", typeof(string));
    
            var hinhAnhParameter = hinhAnh != null ?
                new ObjectParameter("HinhAnh", hinhAnh) :
                new ObjectParameter("HinhAnh", typeof(string));
    
            var vaiTroParameter = vaiTro != null ?
                new ObjectParameter("VaiTro", vaiTro) :
                new ObjectParameter("VaiTro", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phaiParameter = phai != null ?
                new ObjectParameter("Phai", phai) :
                new ObjectParameter("Phai", typeof(string));
    
            var matKhauParameter = matKhau != null ?
                new ObjectParameter("MatKhau", matKhau) :
                new ObjectParameter("MatKhau", typeof(string));
    
            var cCCDParameter = cCCD != null ?
                new ObjectParameter("CCCD", cCCD) :
                new ObjectParameter("CCCD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertNhanVien", tenNVParameter, sDTParameter, ngaySinhParameter, diaChiParameter, hinhAnhParameter, vaiTroParameter, emailParameter, phaiParameter, matKhauParameter, cCCDParameter);
        }
    
        public virtual int InsertPhieuDatPhong(string maKH, string maNV, Nullable<int> soNguoi, string tinhTrang)
        {
            var maKHParameter = maKH != null ?
                new ObjectParameter("MaKH", maKH) :
                new ObjectParameter("MaKH", typeof(string));
    
            var maNVParameter = maNV != null ?
                new ObjectParameter("MaNV", maNV) :
                new ObjectParameter("MaNV", typeof(string));
    
            var soNguoiParameter = soNguoi.HasValue ?
                new ObjectParameter("SoNguoi", soNguoi) :
                new ObjectParameter("SoNguoi", typeof(int));
    
            var tinhTrangParameter = tinhTrang != null ?
                new ObjectParameter("TinhTrang", tinhTrang) :
                new ObjectParameter("TinhTrang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertPhieuDatPhong", maKHParameter, maNVParameter, soNguoiParameter, tinhTrangParameter);
        }
    
        public virtual int InsertPhong(string maLoaiPhong, Nullable<int> tang)
        {
            var maLoaiPhongParameter = maLoaiPhong != null ?
                new ObjectParameter("MaLoaiPhong", maLoaiPhong) :
                new ObjectParameter("MaLoaiPhong", typeof(string));
    
            var tangParameter = tang.HasValue ?
                new ObjectParameter("Tang", tang) :
                new ObjectParameter("Tang", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertPhong", maLoaiPhongParameter, tangParameter);
        }
    
        public virtual int InsertTienNghiPhong(string maLoaiPhong, string ten, Nullable<int> sL)
        {
            var maLoaiPhongParameter = maLoaiPhong != null ?
                new ObjectParameter("MaLoaiPhong", maLoaiPhong) :
                new ObjectParameter("MaLoaiPhong", typeof(string));
    
            var tenParameter = ten != null ?
                new ObjectParameter("Ten", ten) :
                new ObjectParameter("Ten", typeof(string));
    
            var sLParameter = sL.HasValue ?
                new ObjectParameter("SL", sL) :
                new ObjectParameter("SL", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertTienNghiPhong", maLoaiPhongParameter, tenParameter, sLParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int UpdatePhong(string maPhong, string maLoaiPhong, string tinhTrang, Nullable<int> tang, string ghiChu)
        {
            var maPhongParameter = maPhong != null ?
                new ObjectParameter("MaPhong", maPhong) :
                new ObjectParameter("MaPhong", typeof(string));
    
            var maLoaiPhongParameter = maLoaiPhong != null ?
                new ObjectParameter("MaLoaiPhong", maLoaiPhong) :
                new ObjectParameter("MaLoaiPhong", typeof(string));
    
            var tinhTrangParameter = tinhTrang != null ?
                new ObjectParameter("TinhTrang", tinhTrang) :
                new ObjectParameter("TinhTrang", typeof(string));
    
            var tangParameter = tang.HasValue ?
                new ObjectParameter("Tang", tang) :
                new ObjectParameter("Tang", typeof(int));
    
            var ghiChuParameter = ghiChu != null ?
                new ObjectParameter("GhiChu", ghiChu) :
                new ObjectParameter("GhiChu", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePhong", maPhongParameter, maLoaiPhongParameter, tinhTrangParameter, tangParameter, ghiChuParameter);
        }
    
        public virtual ObjectResult<TimKiemPhong_Result> TimKiemPhong(Nullable<System.DateTime> ngayChon)
        {
            var ngayChonParameter = ngayChon.HasValue ?
                new ObjectParameter("NgayChon", ngayChon) :
                new ObjectParameter("NgayChon", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TimKiemPhong_Result>("TimKiemPhong", ngayChonParameter);
        }
    
        public virtual ObjectResult<SelectThongTinPhong_Result> SelectThongTinPhong(Nullable<System.DateTime> ngayChon)
        {
            var ngayChonParameter = ngayChon.HasValue ?
                new ObjectParameter("NgayChon", ngayChon) :
                new ObjectParameter("NgayChon", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectThongTinPhong_Result>("SelectThongTinPhong", ngayChonParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate")]
        public virtual IQueryable<GetPhongInfoByDate_Result> GetPhongInfoByDate(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate1")]
        public virtual IQueryable<GetPhongInfoByDate1_Result> GetPhongInfoByDate1(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate1_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate1](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate2")]
        public virtual IQueryable<GetPhongInfoByDate2_Result> GetPhongInfoByDate2(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate2_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate2](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate3")]
        public virtual IQueryable<GetPhongInfoByDate3_Result> GetPhongInfoByDate3(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate3_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate3](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate4")]
        public virtual IQueryable<GetPhongInfoByDate4_Result> GetPhongInfoByDate4(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate4_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate4](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate5")]
        public virtual IQueryable<GetPhongInfoByDate5_Result> GetPhongInfoByDate5(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate5_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate5](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate6")]
        public virtual IQueryable<GetPhongInfoByDate6_Result> GetPhongInfoByDate6(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate6_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate6](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate7")]
        public virtual IQueryable<GetPhongInfoByDate7_Result> GetPhongInfoByDate7(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate7_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate7](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate8")]
        public virtual IQueryable<GetPhongInfoByDate8_Result> GetPhongInfoByDate8(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate8_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate8](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate9")]
        public virtual IQueryable<GetPhongInfoByDate9_Result> GetPhongInfoByDate9(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate9_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate9](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate10")]
        public virtual IQueryable<GetPhongInfoByDate10_Result> GetPhongInfoByDate10(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate10_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate10](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate11")]
        public virtual IQueryable<GetPhongInfoByDate11_Result> GetPhongInfoByDate11(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate11_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate11](@selectedDate)", selectedDateParameter);
        }
    
        public virtual int UpdatePhieuDatPhong(string maPDP, string maKH, string maNV, Nullable<double> tongGiaTri, Nullable<System.DateTime> ngayTao, Nullable<int> soNguoi, string tinhTrang)
        {
            var maPDPParameter = maPDP != null ?
                new ObjectParameter("MaPDP", maPDP) :
                new ObjectParameter("MaPDP", typeof(string));
    
            var maKHParameter = maKH != null ?
                new ObjectParameter("MaKH", maKH) :
                new ObjectParameter("MaKH", typeof(string));
    
            var maNVParameter = maNV != null ?
                new ObjectParameter("MaNV", maNV) :
                new ObjectParameter("MaNV", typeof(string));
    
            var tongGiaTriParameter = tongGiaTri.HasValue ?
                new ObjectParameter("TongGiaTri", tongGiaTri) :
                new ObjectParameter("TongGiaTri", typeof(double));
    
            var ngayTaoParameter = ngayTao.HasValue ?
                new ObjectParameter("NgayTao", ngayTao) :
                new ObjectParameter("NgayTao", typeof(System.DateTime));
    
            var soNguoiParameter = soNguoi.HasValue ?
                new ObjectParameter("SoNguoi", soNguoi) :
                new ObjectParameter("SoNguoi", typeof(int));
    
            var tinhTrangParameter = tinhTrang != null ?
                new ObjectParameter("TinhTrang", tinhTrang) :
                new ObjectParameter("TinhTrang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePhieuDatPhong", maPDPParameter, maKHParameter, maNVParameter, tongGiaTriParameter, ngayTaoParameter, soNguoiParameter, tinhTrangParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate12")]
        public virtual IQueryable<GetPhongInfoByDate12_Result> GetPhongInfoByDate12(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate12_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate12](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate13")]
        public virtual IQueryable<GetPhongInfoByDate13_Result> GetPhongInfoByDate13(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate13_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate13](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate14")]
        public virtual IQueryable<GetPhongInfoByDate14_Result> GetPhongInfoByDate14(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate14_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate14](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate15")]
        public virtual IQueryable<GetPhongInfoByDate15_Result> GetPhongInfoByDate15(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate15_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate15](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate16")]
        public virtual IQueryable<GetPhongInfoByDate16_Result> GetPhongInfoByDate16(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate16_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate16](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate17")]
        public virtual IQueryable<GetPhongInfoByDate17_Result> GetPhongInfoByDate17(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate17_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate17](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate18")]
        public virtual IQueryable<GetPhongInfoByDate18_Result> GetPhongInfoByDate18(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate18_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate18](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate19")]
        public virtual IQueryable<GetPhongInfoByDate19_Result> GetPhongInfoByDate19(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate19_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate19](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate20")]
        public virtual IQueryable<GetPhongInfoByDate20_Result> GetPhongInfoByDate20(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate20_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate20](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate21")]
        public virtual IQueryable<GetPhongInfoByDate21_Result> GetPhongInfoByDate21(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate21_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate21](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate22")]
        public virtual IQueryable<GetPhongInfoByDate22_Result> GetPhongInfoByDate22(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate22_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate22](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate23")]
        public virtual IQueryable<GetPhongInfoByDate23_Result> GetPhongInfoByDate23(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate23_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate23](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate24")]
        public virtual IQueryable<GetPhongInfoByDate24_Result> GetPhongInfoByDate24(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate24_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate24](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate25")]
        public virtual IQueryable<GetPhongInfoByDate25_Result> GetPhongInfoByDate25(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate25_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate25](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate26")]
        public virtual IQueryable<GetPhongInfoByDate26_Result> GetPhongInfoByDate26(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate26_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate26](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate27")]
        public virtual IQueryable<GetPhongInfoByDate27_Result> GetPhongInfoByDate27(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate27_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate27](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate28")]
        public virtual IQueryable<GetPhongInfoByDate28_Result> GetPhongInfoByDate28(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate28_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate28](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate29")]
        public virtual IQueryable<GetPhongInfoByDate29_Result> GetPhongInfoByDate29(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate29_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate29](@selectedDate)", selectedDateParameter);
        }
    
        public virtual int UpdateDichVuTheoPDP(string maPDP, string maPhong, string maDV, Nullable<int> soLuongDV, Nullable<double> tongGiaTri)
        {
            var maPDPParameter = maPDP != null ?
                new ObjectParameter("MaPDP", maPDP) :
                new ObjectParameter("MaPDP", typeof(string));
    
            var maPhongParameter = maPhong != null ?
                new ObjectParameter("MaPhong", maPhong) :
                new ObjectParameter("MaPhong", typeof(string));
    
            var maDVParameter = maDV != null ?
                new ObjectParameter("MaDV", maDV) :
                new ObjectParameter("MaDV", typeof(string));
    
            var soLuongDVParameter = soLuongDV.HasValue ?
                new ObjectParameter("SoLuongDV", soLuongDV) :
                new ObjectParameter("SoLuongDV", typeof(int));
    
            var tongGiaTriParameter = tongGiaTri.HasValue ?
                new ObjectParameter("TongGiaTri", tongGiaTri) :
                new ObjectParameter("TongGiaTri", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateDichVuTheoPDP", maPDPParameter, maPhongParameter, maDVParameter, soLuongDVParameter, tongGiaTriParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate30")]
        public virtual IQueryable<GetPhongInfoByDate30_Result> GetPhongInfoByDate30(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate30_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate30](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate31")]
        public virtual IQueryable<GetPhongInfoByDate31_Result> GetPhongInfoByDate31(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate31_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate31](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate32")]
        public virtual IQueryable<GetPhongInfoByDate32_Result> GetPhongInfoByDate32(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate32_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate32](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate33")]
        public virtual IQueryable<GetPhongInfoByDate33_Result> GetPhongInfoByDate33(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate33_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate33](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate34")]
        public virtual IQueryable<GetPhongInfoByDate34_Result> GetPhongInfoByDate34(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate34_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate34](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate35")]
        public virtual IQueryable<GetPhongInfoByDate35_Result> GetPhongInfoByDate35(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate35_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate35](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate36")]
        public virtual IQueryable<GetPhongInfoByDate36_Result> GetPhongInfoByDate36(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate36_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate36](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate37")]
        public virtual IQueryable<GetPhongInfoByDate37_Result> GetPhongInfoByDate37(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate37_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate37](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate38")]
        public virtual IQueryable<GetPhongInfoByDate38_Result> GetPhongInfoByDate38(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate38_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate38](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate39")]
        public virtual IQueryable<GetPhongInfoByDate39_Result> GetPhongInfoByDate39(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate39_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate39](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate40")]
        public virtual IQueryable<GetPhongInfoByDate40_Result> GetPhongInfoByDate40(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate40_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate40](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate41")]
        public virtual IQueryable<GetPhongInfoByDate41_Result> GetPhongInfoByDate41(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate41_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate41](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate42")]
        public virtual IQueryable<GetPhongInfoByDate42_Result> GetPhongInfoByDate42(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate42_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate42](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate43")]
        public virtual IQueryable<GetPhongInfoByDate43_Result> GetPhongInfoByDate43(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate43_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate43](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate44")]
        public virtual IQueryable<GetPhongInfoByDate44_Result> GetPhongInfoByDate44(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate44_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate44](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate45")]
        public virtual IQueryable<GetPhongInfoByDate45_Result> GetPhongInfoByDate45(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate45_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate45](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate46")]
        public virtual IQueryable<GetPhongInfoByDate46_Result> GetPhongInfoByDate46(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate46_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate46](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate47")]
        public virtual IQueryable<GetPhongInfoByDate47_Result> GetPhongInfoByDate47(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate47_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate47](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate48")]
        public virtual IQueryable<GetPhongInfoByDate48_Result> GetPhongInfoByDate48(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate48_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate48](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate49")]
        public virtual IQueryable<GetPhongInfoByDate49_Result> GetPhongInfoByDate49(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate49_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate49](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate50")]
        public virtual IQueryable<GetPhongInfoByDate50_Result> GetPhongInfoByDate50(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate50_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate50](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate51")]
        public virtual IQueryable<GetPhongInfoByDate51_Result> GetPhongInfoByDate51(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate51_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate51](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate52")]
        public virtual IQueryable<GetPhongInfoByDate52_Result> GetPhongInfoByDate52(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate52_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate52](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate53")]
        public virtual IQueryable<GetPhongInfoByDate53_Result> GetPhongInfoByDate53(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate53_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate53](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate54")]
        public virtual IQueryable<GetPhongInfoByDate54_Result> GetPhongInfoByDate54(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate54_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate54](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate55")]
        public virtual IQueryable<GetPhongInfoByDate55_Result> GetPhongInfoByDate55(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate55_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate55](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate56")]
        public virtual IQueryable<GetPhongInfoByDate56_Result> GetPhongInfoByDate56(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate56_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate56](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate57")]
        public virtual IQueryable<GetPhongInfoByDate57_Result> GetPhongInfoByDate57(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate57_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate57](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate58")]
        public virtual IQueryable<GetPhongInfoByDate58_Result> GetPhongInfoByDate58(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate58_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate58](@selectedDate)", selectedDateParameter);
        }
    
        [EdmFunction("QL_KhachSanEntities", "GetPhongInfoByDate59")]
        public virtual IQueryable<GetPhongInfoByDate59_Result> GetPhongInfoByDate59(Nullable<System.DateTime> selectedDate)
        {
            var selectedDateParameter = selectedDate.HasValue ?
                new ObjectParameter("selectedDate", selectedDate) :
                new ObjectParameter("selectedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPhongInfoByDate59_Result>("[QL_KhachSanEntities].[GetPhongInfoByDate59](@selectedDate)", selectedDateParameter);
        }
    }
}
